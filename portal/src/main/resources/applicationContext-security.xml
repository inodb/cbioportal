<?xml version="1.0" encoding="UTF-8"?>

<!--
-  Namespace-based Google+ configuration
   mod 10July2014 FJC - all google+ modifications highlighted by Google+ comments
-->

<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <!-- this bean is shared between profiles -->
    <b:bean id="accessControl" class="org.mskcc.cbio.portal.util.internal.AccessControlImpl"/>

    <!-- authenticate=true -->
    <b:beans profile="true">
    <!--
        Required for custom signature method factory to be autowired into
        the ProtectedResourceProcessingFilter
    -->
    <!-- Google+ connection factory definition -->
    <context:annotation-config/>
    <!-- Ensures that configuration properties are read from a property file -->
  <!--   <context:property-placeholder location="classpath:socialConnection.properties"/>    -->
    <!--  Connection Factory to Google +  -->
    <!-- Provider id = google -->
    <!-- mod 08Jul2014 - use custom google connection factory to support email as id -->
    <b:bean id="googleplusConnectionFactory" class="org.mskcc.cbio.portal.social.authentication.googleplus.GoogleplusConnectionFactory" >
        <b:constructor-arg value="${googleplus.consumer.key}" />
        <b:constructor-arg value="${googleplus.consumer.secret}" />
    </b:bean>
    <!-- Google+ connection factory locator -->
    <b:bean id="connectionFactoryLocator" class="org.springframework.social.security.SocialAuthenticationServiceRegistry">
        <b:property name="authenticationServices">
            <b:list>
                <b:bean class="org.springframework.social.google.security.GoogleAuthenticationService">
                    <b:constructor-arg value="${googleplus.consumer.key}" />
                    <b:constructor-arg value="${googleplus.consumer.secret}" />
                    <b:property name="connectionFactory" ref="googleplusConnectionFactory" />
                    <!-- Important: The next property name changed from "scope" to "defaultScope" in 1.1.0.M4 -->
                    <b:property name="defaultScope" value="email" />
                </b:bean>
            </b:list>
        </b:property>
    </b:bean>

    <!--
            Should come from another file with value conditional based on portal.properties
    -->
    <global-method-security pre-post-annotations="enabled">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>

    <!--
            Static resources not processed by spring security filters 
    -->
    <http pattern="/css/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/gfx/**" security="none"/>

    <!-- Google+ required reference to authentication entry point  -->
    <http  entry-point-ref="authenticationEntryPoint" use-expressions="true">  
        <intercept-url pattern="/auth/*" access="permitAll"/>  
         <intercept-url pattern="/login.jsp*" access="permitAll"/>
         <!--<intercept-url pattern="/api/**" access="permitAll"/>--> <!-- need to figure this out -->
        <intercept-url pattern="/monitoring*" access="isAuthenticated()"/>
        <intercept-url pattern="/video.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/news.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/faq.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/data_sets.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/about_us.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/web_api.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/jobs.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/cgds_r.jsp" access="isAuthenticated()"/>  
        <intercept-url pattern="/networks.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/protein_exp.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/co_expression.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/tutorial.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/onco_query_lang_desc.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/visualize_your_data.jsp" access="isAuthenticated()"/>
        <intercept-url pattern="/index.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/cross_cancer.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/cross_cancer_summary.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/portal_meta_data.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/mutation_diagram_data.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/mutation_table_data.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/getMutationData.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/getPfamSequence.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/get3dPdb.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/ClinicalFreeForm.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/CheckGeneSymbol.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/show_data.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/svgtopdf.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/generatePlots.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/plot-test.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/network.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/networkSbgn.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/bioGeneQuery.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/ProteinArraySignificanceTest.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/omaRedirect.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/swf/*" access="isAuthenticated()"/>
        <intercept-url pattern="/link.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/ln*" access="isAuthenticated()"/>
        <intercept-url pattern="/oncoprint_converter.svg*" access="isAuthenticated()"/>
        <intercept-url pattern="/histogram_converter.svg*" access="isAuthenticated()"/>
        <intercept-url pattern="/MutSig.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/webservice.do*" access="isAuthenticated() or hasIpAddress('127.0.0.1')"/>
        <intercept-url pattern="/Gistic.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/Oncoprint.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/study.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/drugs.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/index.tumormap*" access="isAuthenticated()"/>
        <intercept-url pattern="/tumormap.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/tumormap.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/case.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/mutations.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/cna.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/clinicaltrials.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/similar_patients.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/GeneData.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/crosscancerquery.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/crosscancermutation.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/clinical.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/clinicalAttributes.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/clinical_timeline_data.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/tools.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/echofile*" access="isAuthenticated()"/>
        <intercept-url pattern="/getGeneticProfile.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/getProfileData.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/getProteinArrayData.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/getSurvivalData.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/igvlinking.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/calcPval.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/pancancerMutations.json*" access="isAuthenticated()"/>
        <intercept-url pattern="/jsmol_frame.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/file_download_frame.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/getCoExp.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/getAlterationData.json" access="isAuthenticated()"/>
        <intercept-url pattern="/downloadfile.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/standalone_mutation.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/calcFisherExact.do*" access="isAuthenticated()"/>
        <intercept-url pattern="/mutation_mapper.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/release_notes_mutation_mapper.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/oncoprinter.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/release_notes_oncoprinter.jsp*" access="isAuthenticated()"/>
        <intercept-url pattern="/mutexdownload.do*" access="isAuthenticated()"/>

        <!-- everything else locked down by default -->
        <intercept-url pattern="/**" access="denyAll"/>
        
        <!-- Google+  -Add social authentication filter to the Spring Security filter chain. -->
        <custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER" />
        
        <!--  logout actions -->      
        <!-- Remove Google+ entriy from repository at signout -->
    
        <logout logout-success-url="/login.jsp?logout_success=true" delete-cookies="JSESSIONID"/>
        <!-- to enable access from matlab, r, python, etc clients -->
        <session-management session-fixation-protection="none"/>
    
    </http>
    <!-- Google+ required authentication entry point -->
     <b:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <b:property name="loginFormUrl" value="/login.jsp" />
    </b:bean>
    <!-- Google+  -->
    <!--  required -->
    <context:annotation-config></context:annotation-config>
    
    <!-- Google+ in memory user connection repository  -->
    <b:bean id="connectionSignUp" class="org.mskcc.cbio.portal.social.authentication.googleplus.GoogleplusConnectionSignUp"/>
    <b:bean id="usersConnectionRepository" 
            class="org.springframework.social.connect.mem.InMemoryUsersConnectionRepository">
        <b:constructor-arg ref="connectionFactoryLocator" />
        <b:property name="connectionSignUp" ref="connectionSignUp"/>
    </b:bean>
    
    <b:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
             factory-method="noOpText" >
    </b:bean>
     
    <!-- Google+ authentication manager -->
      
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
        </authentication-provider>
        <authentication-provider ref="socialAuthenticationProvider"/>
    </authentication-manager>

    <!--  Google+ authentication filter  -->
    <!-- configure the social authentication filter which integrates with spring social -->
    <!-- Filter for handling the provider sign-in flow within the Spring Security filter chain. 
    Should be injected into the chain at or before the PRE_AUTH_FILTER location -->
    <b:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <b:constructor-arg index="0" ref="authenticationManager" />
        <b:constructor-arg index="1" ref="userIdSource" />
        <b:constructor-arg index="2" ref="usersConnectionRepository" />
        <b:constructor-arg index="3" ref="connectionFactoryLocator" />
        <!-- Set the URLs for authentication targets -->
        <!-- Original OpenID authentication targets-->
        <!--login-page="/login.jsp" default-target-url="/index.do" 
        user-service-ref="customUserService" 
        authentication-failure-url="/login.jsp?login_error=true" -->
        <!-- Google+ authentication targets-->
        <b:property name="signupUrl" value="/login.jsp" />
        <!-- URL for authentication failure  -->
        <b:property name="defaultFailureUrl" value="/login.jsp?login_error=true" />
        <!-- URL for successful authentication -->
        <b:property name="postLoginUrl" value="/index.do" />
    </b:bean>
     
    <!-- Google+  authentication provider  -->
    <!-- configure the social authentication provider which processes authentication requests -->
    <b:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
        <b:constructor-arg index="0" ref="usersConnectionRepository" />
        <!-- Google+ use new social user details service -->
        <b:constructor-arg index="1" ref="socialUserDetailsService" />
    </b:bean>
    
    <!-- definition for SocialUserDetailsService  uses portal database to authenticate user-->
    <b:bean id="socialUserDetailsService" class="org.mskcc.cbio.portal.social.authentication.googleplus.GoogleplusUserDetailsService">
        <b:constructor-arg index="0" ref="userDetailsService" />
    </b:bean>
   
    
    <!-- Google+ user id source -->
    <!-- returns the spring security account id for the user -->
    <!--Implementation of UserIdSource that returns the Spring Security Authentication's name as the user ID -->
    <b:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"></b:bean>

    <!--
            To use hasPermission() expressions, we have to configure a custom expression handler
            with our own PermissionEvaluator.  See 15.3.2 Built-In Expression:
            @http://static.springsource.org/spring-security/site/docs/3.0.x/reference/el-access.html#el-permission-evaluator
    -->
    <b:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <b:property name="permissionEvaluator" ref="customPermissionEvaluator"/>
    </b:bean>
    <b:bean id="customPermissionEvaluator" class="org.mskcc.cbio.portal.util.CancerStudyPermissionEvaluator"/>

    <!--  Google+  PortalUserDeatilsService  -->
    <!-- utilizes legacy DAO to lookup registered users in the database -->
    <b:bean id="userDetailsService" class="org.mskcc.cbio.portal.social.authentication.PortalUserDetailsService">
        <b:constructor-arg ref="portalUserDAO"/>
    </b:bean>

    <!-- 
        some beans to help with access control
    -->
    <b:bean id="portalUserDAO" class="org.mskcc.cbio.portal.dao.internal.PortalUserJDBCDAO">
        <b:constructor-arg ref="dataSource"/>
    </b:bean>
    <b:bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <b:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <b:property name="url" value="jdbc:mysql://${db.host}/${db.portal_db_name}"/>
        <b:property name="username" value="${db.user}"/>
        <b:property name="password" value="${db.password}"/>
    </b:bean>
    </b:beans>

    <!-- authenticate=false --> 
    <b:beans profile="false">
    <global-method-security pre-post-annotations="disabled"/>
    <http pattern="/**" security="none"/>
    </b:beans>

</b:beans>